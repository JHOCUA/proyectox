# .github/workflows/firebase-hosting-merge.yml
name: Deploy to Firebase Hosting on merge
on:
  push:
    branches: [ master ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      # DEV env (usado al correr localmente con ng serve)
      - name: Generate environment.ts
        run: |
          cat <<EOF > src/environments/environment.ts
          export const environment = {
            production: false,
            firebaseConfig: {
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
            }
          };
          EOF

      # PRODUCCIÃ“N env (reemplazado al hacer ng build --configuration=production)
      - name: Generate production environment file
        run: |
          cat <<EOF > src/environments/environment.prod.ts
          export const environment = {
            production: true,
            firebaseConfig: {
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
            }
          };
          EOF

      - name: Build Angular (prod)
        run: npm run build -- --configuration=production

      - name: Authenticate Firebase CLI
        run: echo "${{ secrets.FIREBASE_TOKEN }}" > token.txt

      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: npx firebase-tools deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --non-interactive
